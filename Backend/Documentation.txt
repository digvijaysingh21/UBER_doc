backend setup

npm init -y

npm i express

npm i dotenv cors


in package.json file instead of "main": "index.js", we have to write "main": "server.js",

npx nodemon or if it does not work try this npm install --save-dev nodemon

then 

inside package.json add this "dev": "nodemon app.js" inside scripts
 "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon app.js"
  },

and to run "npm run dev" in terminal

to stop the server "ctrl + c"

to restart "Use "rs" to Restart the Server"



1. Configure Global User Information
To set the username and email for all repositories on your machine, use the following commands. These settings will apply to all repositories you work with on your local machine:

bash
Copy
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"
Replace "Your Name" with your actual name, and "your.email@example.com" with your email address.

2. Configure Local User Information (for a specific repository)
If you need different user information for a specific repository (for example, if you use one email for work and another for personal projects), navigate to the repository directory in your terminal and run the following commands:

bash
Copy
git config user.name "Your Name"
git config user.email "your.email@example.com"
This will configure your username and email only for the current repository. The --global flag will not be used in this case, which means it will override the global configuration for this specific repo.


//for data base
npm i mongoose

//for hashed password and comparing
npm i bcrypt

//for tokens
npm i jsonwebtoken

// express-validator is a popular library used in Express.js applications for validating and sanitizing incoming request data. 
// It is particularly helpful when you need to ensure that the data sent to your server (via form submissions, API requests, etc.)
// meets certain criteria before processing it.
npm i express-validator 


//middleware to interact with cookie

//cookie-parser is a middleware for Express.js that parses cookies attached to the client request. 
//It makes it easier to read and manipulate cookies in a Node.js application.
npm i cookie-parser


//flow 
MODELS -> Controller->ROUTES -> app.js ->Service -> ->